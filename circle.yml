# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_EMAIL   - login info for docker hub
# DOCKER_USER
# DOCKER_PASS
#
machine:
  services:
    - docker

dependencies:
  # make sure to keep the docker cache dir
  cache_directories:
    - "~/docker"

  override:
    - docker info

    # build the container, use circleci's docker cache workaround
    # only use 1 image per day to keep the cache size from getting 
    # too big and slowing down the build
    - I="img-$(date +%j).tar"; if [[ -e ~/docker/$I ]]; then echo "Loading $I"; docker load -i ~/docker/$I; fi

    # create a version.json
    - printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' "$CIRCLE_SHA1" "$CIRCLE_TAG" "$CIRCLE_PROJECT_USERNAME" "$CIRCLE_PROJECT_REPONAME" "$CIRCLE_BUILD_URL" > version.json
    - cp version.json $CIRCLE_ARTIFACTS

    # use fat container to build everything
    - docker build -t build-image .

    # extract assets and put it into a -slim container
    - mkdir $HOME/dockerbuild && chmod 777 $HOME/dockerbuild

    - docker run -it --rm --entrypoint=sh -v "$HOME/dockerbuild:/dockerbuild" build-image -c "tar --exclude=.dockerignore -czvf /dockerbuild/archive.tar.gz ."

    # note "sudo" here to workaround, https://github.com/docker/docker/issues/15785
    - sudo docker build -f Dockerfile-slim -t app:build - < $HOME/dockerbuild/archive.tar.gz

    - docker images --no-trunc | awk '/^app/ {print $3}' | tee $CIRCLE_ARTIFACTS/docker-image-shasum256.txt

    # Clean up any old images and save the new one
    - I="img-$(date +%j).tar"; mkdir -p ~/docker; rm ~/docker/*; docker save build-image > ~/docker/$I; ls -l ~/docker
test:
  override:
    - docker run app:build test

# appropriately tag and push the container to dockerhub
deployment:
  hub_latest:
    branch: "master"
    commands:
      - "[ ! -z $DOCKERHUB_REPO ]"
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - "docker tag app:build ${DOCKERHUB_REPO}:latest"
      - "docker push ${DOCKERHUB_REPO}:latest"

  hub_releases:
    # push all tags
    tag: /.*/
    commands:
      - "[ ! -z $DOCKERHUB_REPO ]"
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - "echo ${DOCKERHUB_REPO}:${CIRCLE_TAG}"
      - "docker tag app:build ${DOCKERHUB_REPO}:${CIRCLE_TAG}"
      - "docker images"
      - "docker push ${DOCKERHUB_REPO}:${CIRCLE_TAG}"
